/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../contracts/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b5060405161160a38038061160a83398101604081905261003091610274565b6040805180820190915260018152603160f81b6020820152839081908185600361005a838261037c565b506004610067828261037c565b5061007791508390506005610139565b61012052610086816006610139565b61014052815160208084019190912060e052815190820120610100524660a05261011360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506008805460ff191660ff92909216919091179055506104929050565b60006020835110156101555761014e8361016c565b9050610166565b81610160848261037c565b5060ff90505b92915050565b600080829050601f815111156101a0578260405163305a27a960e01b8152600401610197919061043b565b60405180910390fd5b80516101ab8261046e565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101e45781810151838201526020016101cc565b50506000910152565b600082601f8301126101fe57600080fd5b81516001600160401b0380821115610218576102186101b3565b604051601f8301601f19908116603f01168101908282118183101715610240576102406101b3565b8160405283815286602085880101111561025957600080fd5b61026a8460208301602089016101c9565b9695505050505050565b60008060006060848603121561028957600080fd5b83516001600160401b03808211156102a057600080fd5b6102ac878388016101ed565b945060208601519150808211156102c257600080fd5b506102cf868287016101ed565b925050604084015160ff811681146102e657600080fd5b809150509250925092565b600181811c9082168061030557607f821691505b60208210810361032557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610377576000816000526020600020601f850160051c810160208610156103545750805b601f850160051c820191505b8181101561037357828155600101610360565b5050505b505050565b81516001600160401b03811115610395576103956101b3565b6103a9816103a384546102f1565b8461032b565b602080601f8311600181146103de57600084156103c65750858301515b600019600386901b1c1916600185901b178555610373565b600085815260208120601f198616915b8281101561040d578886015182559484019460019091019084016103ee565b508582101561042b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015261045a8160408501602087016101c9565b601f01601f19169190910160400192915050565b805160208083015191908110156103255760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161111e6104ec6000396000610805015260006107d80152600061074a015260006107220152600061067d015260006106a7015260006106d1015261111e6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a08231116100975780639dc29fac116100665780639dc29fac146101f1578063a9059cbb14610204578063d505accf14610217578063dd62ed3e1461022a57600080fd5b806370a08231146101925780637ecebe00146101bb57806384b0196e146101ce57806395d89b41146101e957600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e5151461017557806340c10f191461017d57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610263565b60405161010f9190610e65565b60405180910390f35b61012b610126366004610e9b565b6102f5565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610ec5565b61030f565b60085460405160ff909116815260200161010f565b61013f610333565b61019061018b366004610e9b565b610342565b005b61013f6101a0366004610f01565b6001600160a01b031660009081526020819052604090205490565b61013f6101c9366004610f01565b610350565b6101d661036e565b60405161010f9796959493929190610f1c565b6101026103d0565b6101906101ff366004610e9b565b6103df565b61012b610212366004610e9b565b6103e9565b610190610225366004610fd1565b6103f7565b61013f610238366004611044565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461027290611077565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611077565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b5050505050905090565b600033610303818585610568565b60019150505b92915050565b60003361031d85828561057a565b610328858585610611565b506001949350505050565b600061033d610670565b905090565b61034c828261079b565b5050565b6001600160a01b038116600090815260076020526040812054610309565b6000606080600080600060606103826107d1565b61038a6107fe565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60606004805461027290611077565b61034c828261082b565b600033610303818585610611565b83421115610439576040517f62791302000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104868c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104e182610861565b905060006104f1828787876108a9565b9050896001600160a01b0316816001600160a01b031614610551576040517f4b800e460000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301528b166024820152604401610430565b61055c8a8a8a610568565b50505050505050505050565b61057583838360016108d7565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461060b57818110156105fc576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024810182905260448101839052606401610430565b61060b848484840360006108d7565b50505050565b6001600160a01b03831661063b57604051634b637e8f60e11b815260006004820152602401610430565b6001600160a01b0382166106655760405163ec442f0560e01b815260006004820152602401610430565b6105758383836109de565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156106c957507f000000000000000000000000000000000000000000000000000000000000000046145b156106f357507f000000000000000000000000000000000000000000000000000000000000000090565b61033d604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b0382166107c55760405163ec442f0560e01b815260006004820152602401610430565b61034c600083836109de565b606061033d7f00000000000000000000000000000000000000000000000000000000000000006005610b21565b606061033d7f00000000000000000000000000000000000000000000000000000000000000006006610b21565b6001600160a01b03821661085557604051634b637e8f60e11b815260006004820152602401610430565b61034c826000836109de565b600061030961086e610670565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000806108bb88888888610bcc565b9250925092506108cb8282610c9b565b50909695505050505050565b6001600160a01b03841661091a576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610430565b6001600160a01b03831661095d576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610430565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561060b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109d091815260200190565b60405180910390a350505050565b6001600160a01b038316610a095780600260008282546109fe91906110b1565b90915550610a949050565b6001600160a01b03831660009081526020819052604090205481811015610a75576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610430565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ab057600280548290039055610acf565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b1491815260200190565b60405180910390a3505050565b606060ff8314610b3b57610b3483610d9f565b9050610309565b818054610b4790611077565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7390611077565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b50505050509050610309565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c075750600091506003905082610c91565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c5b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c8757506000925060019150829050610c91565b9250600091508190505b9450945094915050565b6000826003811115610caf57610caf6110d2565b03610cb8575050565b6001826003811115610ccc57610ccc6110d2565b03610d03576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115610d1757610d176110d2565b03610d51576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610430565b6003826003811115610d6557610d656110d2565b0361034c576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610430565b60606000610dac83610dde565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f811115610309576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000815180845260005b81811015610e4557602081850181015186830182015201610e29565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e786020830184610e1f565b9392505050565b80356001600160a01b0381168114610e9657600080fd5b919050565b60008060408385031215610eae57600080fd5b610eb783610e7f565b946020939093013593505050565b600080600060608486031215610eda57600080fd5b610ee384610e7f565b9250610ef160208501610e7f565b9150604084013590509250925092565b600060208284031215610f1357600080fd5b610e7882610e7f565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e06020840152610f5960e084018a610e1f565b8381036040850152610f6b818a610e1f565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015610fbf57835183529284019291840191600101610fa3565b50909c9b505050505050505050505050565b600080600080600080600060e0888a031215610fec57600080fd5b610ff588610e7f565b965061100360208901610e7f565b95506040880135945060608801359350608088013560ff8116811461102757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561105757600080fd5b61106083610e7f565b915061106e60208401610e7f565b90509250929050565b600181811c9082168061108b57607f821691505b6020821081036110ab57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f99a332e65f565daa99cb460e724d193e7d9ddc76134988036abb5565282c75c64736f6c63430008190033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, decimals_, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, decimals_, overrides || {}) as Promise<
      ERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Mock__factory {
    return super.connect(runner) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new Interface(_abi) as ERC20MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Mock {
    return new Contract(address, _abi, runner) as unknown as ERC20Mock;
  }
}
