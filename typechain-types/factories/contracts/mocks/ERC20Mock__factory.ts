/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../contracts/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b6b380380610b6b83398101604081905261002f91610128565b8282600361003d8382610230565b50600461004a8282610230565b50506005805460ff191660ff9390931692909217909155506102ef915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009157600080fd5b81516001600160401b03808211156100ab576100ab61006a565b604051601f8301601f19908116603f011681019082821181831017156100d3576100d361006a565b81604052838152602092508660208588010111156100f057600080fd5b600091505b8382101561011257858201830151818301840152908201906100f5565b6000602085830101528094505050505092915050565b60008060006060848603121561013d57600080fd5b83516001600160401b038082111561015457600080fd5b61016087838801610080565b9450602086015191508082111561017657600080fd5b5061018386828701610080565b925050604084015160ff8116811461019a57600080fd5b809150509250925092565b600181811c908216806101b957607f821691505b6020821081036101d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561022b576000816000526020600020601f850160051c810160208610156102085750805b601f850160051c820191505b8181101561022757828155600101610214565b5050505b505050565b81516001600160401b038111156102495761024961006a565b61025d8161025784546101a5565b846101df565b602080601f831160018114610292576000841561027a5750858301515b600019600386901b1c1916600185901b178555610227565b600085815260208120601f198616915b828110156102c1578886015182559484019460019091019084016102a2565b50858210156102df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61086d806102fe6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806340c10f19116100815780639dc29fac1161005b5780639dc29fac1461018f578063a9059cbb146101a2578063dd62ed3e146101b557600080fd5b806340c10f191461014957806370a082311461015e57806395d89b411461018757600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101ee565b6040516100e391906106b6565b60405180910390f35b6100ff6100fa366004610721565b610280565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f36600461074b565b61029a565b60055460405160ff90911681526020016100e3565b61015c610157366004610721565b6102be565b005b61011361016c366004610787565b6001600160a01b031660009081526020819052604090205490565b6100d66102cc565b61015c61019d366004610721565b6102db565b6100ff6101b0366004610721565b6102e5565b6101136101c33660046107a9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101fd906107dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610229906107dc565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b60003361028e8185856102f3565b60019150505b92915050565b6000336102a8858285610305565b6102b38585856103a1565b506001949350505050565b6102c88282610400565b5050565b6060600480546101fd906107dc565b6102c88282610436565b60003361028e8185856103a1565b610300838383600161046c565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461039b578181101561038c576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61039b8484848403600061046c565b50505050565b6001600160a01b0383166103cb57604051634b637e8f60e11b815260006004820152602401610383565b6001600160a01b0382166103f55760405163ec442f0560e01b815260006004820152602401610383565b610300838383610573565b6001600160a01b03821661042a5760405163ec442f0560e01b815260006004820152602401610383565b6102c860008383610573565b6001600160a01b03821661046057604051634b637e8f60e11b815260006004820152602401610383565b6102c882600083610573565b6001600160a01b0384166104af576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610383565b6001600160a01b0383166104f2576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610383565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561039b57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161056591815260200190565b60405180910390a350505050565b6001600160a01b03831661059e5780600260008282546105939190610816565b909155506106299050565b6001600160a01b0383166000908152602081905260409020548181101561060a576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610383565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661064557600280548290039055610664565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106a991815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156106e4578581018301518582016040015282016106c8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071c57600080fd5b919050565b6000806040838503121561073457600080fd5b61073d83610705565b946020939093013593505050565b60008060006060848603121561076057600080fd5b61076984610705565b925061077760208501610705565b9150604084013590509250925092565b60006020828403121561079957600080fd5b6107a282610705565b9392505050565b600080604083850312156107bc57600080fd5b6107c583610705565b91506107d360208401610705565b90509250929050565b600181811c908216806107f057607f821691505b60208210810361081057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029457634e487b7160e01b600052601160045260246000fdfea264697066735822122003f980fe4c4944edaa9a509273d0491e002cbc519551a85cb57826957b238f1464736f6c63430008190033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, decimals_, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, decimals_, overrides || {}) as Promise<
      ERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Mock__factory {
    return super.connect(runner) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new Interface(_abi) as ERC20MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Mock {
    return new Contract(address, _abi, runner) as unknown as ERC20Mock;
  }
}
