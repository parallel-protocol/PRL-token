/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IOAppCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppCore__factory>;
    getContractFactory(
      name: "IOAppMsgInspector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppMsgInspector__factory>;
    getContractFactory(
      name: "IOAppOptionsType3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppOptionsType3__factory>;
    getContractFactory(
      name: "IOAppReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppReceiver__factory>;
    getContractFactory(
      name: "OAppOptionsType3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppOptionsType3__factory>;
    getContractFactory(
      name: "OApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OApp__factory>;
    getContractFactory(
      name: "OAppCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppCore__factory>;
    getContractFactory(
      name: "OAppReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppReceiver__factory>;
    getContractFactory(
      name: "OAppSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppSender__factory>;
    getContractFactory(
      name: "IOAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOAppPreCrimeSimulator__factory>;
    getContractFactory(
      name: "IPreCrime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPreCrime__factory>;
    getContractFactory(
      name: "OAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OAppPreCrimeSimulator__factory>;
    getContractFactory(
      name: "ILayerZeroEndpointV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpointV2__factory>;
    getContractFactory(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver__factory>;
    getContractFactory(
      name: "IMessageLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageLib__factory>;
    getContractFactory(
      name: "IMessageLibManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessageLibManager__factory>;
    getContractFactory(
      name: "IMessagingChannel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingChannel__factory>;
    getContractFactory(
      name: "IMessagingComposer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingComposer__factory>;
    getContractFactory(
      name: "IMessagingContext",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMessagingContext__factory>;
    getContractFactory(
      name: "ISendLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISendLib__factory>;
    getContractFactory(
      name: "AddressCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressCast__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nonces__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "IOFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOFT__factory>;
    getContractFactory(
      name: "OFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFT__factory>;
    getContractFactory(
      name: "OFTAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTAdapter__factory>;
    getContractFactory(
      name: "OFTCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OFTCore__factory>;
    getContractFactory(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorsLib__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "PeripheralMigrationContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheralMigrationContract__factory>;
    getContractFactory(
      name: "PeripheralPRL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheralPRL__factory>;
    getContractFactory(
      name: "LockBox",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LockBox__factory>;
    getContractFactory(
      name: "PrincipalMigrationContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PrincipalMigrationContract__factory>;
    getContractFactory(
      name: "PRL",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PRL__factory>;

    getContractAt(
      name: "IOAppCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppCore>;
    getContractAt(
      name: "IOAppMsgInspector",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppMsgInspector>;
    getContractAt(
      name: "IOAppOptionsType3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppOptionsType3>;
    getContractAt(
      name: "IOAppReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppReceiver>;
    getContractAt(
      name: "OAppOptionsType3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppOptionsType3>;
    getContractAt(
      name: "OApp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OApp>;
    getContractAt(
      name: "OAppCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppCore>;
    getContractAt(
      name: "OAppReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppReceiver>;
    getContractAt(
      name: "OAppSender",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppSender>;
    getContractAt(
      name: "IOAppPreCrimeSimulator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOAppPreCrimeSimulator>;
    getContractAt(
      name: "IPreCrime",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPreCrime>;
    getContractAt(
      name: "OAppPreCrimeSimulator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OAppPreCrimeSimulator>;
    getContractAt(
      name: "ILayerZeroEndpointV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroEndpointV2>;
    getContractAt(
      name: "ILayerZeroReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroReceiver>;
    getContractAt(
      name: "IMessageLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageLib>;
    getContractAt(
      name: "IMessageLibManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessageLibManager>;
    getContractAt(
      name: "IMessagingChannel",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingChannel>;
    getContractAt(
      name: "IMessagingComposer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingComposer>;
    getContractAt(
      name: "IMessagingContext",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMessagingContext>;
    getContractAt(
      name: "ISendLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISendLib>;
    getContractAt(
      name: "AddressCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressCast>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Nonces",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Nonces>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "IOFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOFT>;
    getContractAt(
      name: "OFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OFT>;
    getContractAt(
      name: "OFTAdapter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OFTAdapter>;
    getContractAt(
      name: "OFTCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OFTCore>;
    getContractAt(
      name: "ErrorsLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorsLib>;
    getContractAt(
      name: "ERC20Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "PeripheralMigrationContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PeripheralMigrationContract>;
    getContractAt(
      name: "PeripheralPRL",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PeripheralPRL>;
    getContractAt(
      name: "LockBox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LockBox>;
    getContractAt(
      name: "PrincipalMigrationContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PrincipalMigrationContract>;
    getContractAt(
      name: "PRL",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PRL>;

    deployContract(
      name: "IOAppCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppCore>;
    deployContract(
      name: "IOAppMsgInspector",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppMsgInspector>;
    deployContract(
      name: "IOAppOptionsType3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppOptionsType3>;
    deployContract(
      name: "IOAppReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppReceiver>;
    deployContract(
      name: "OAppOptionsType3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppOptionsType3>;
    deployContract(
      name: "OApp",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OApp>;
    deployContract(
      name: "OAppCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppCore>;
    deployContract(
      name: "OAppReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppReceiver>;
    deployContract(
      name: "OAppSender",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppSender>;
    deployContract(
      name: "IOAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppPreCrimeSimulator>;
    deployContract(
      name: "IPreCrime",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPreCrime>;
    deployContract(
      name: "OAppPreCrimeSimulator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppPreCrimeSimulator>;
    deployContract(
      name: "ILayerZeroEndpointV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroEndpointV2>;
    deployContract(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "IMessageLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessageLib>;
    deployContract(
      name: "IMessageLibManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessageLibManager>;
    deployContract(
      name: "IMessagingChannel",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingChannel>;
    deployContract(
      name: "IMessagingComposer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingComposer>;
    deployContract(
      name: "IMessagingContext",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingContext>;
    deployContract(
      name: "ISendLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISendLib>;
    deployContract(
      name: "AddressCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressCast>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "IOFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOFT>;
    deployContract(
      name: "OFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFT>;
    deployContract(
      name: "OFTAdapter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFTAdapter>;
    deployContract(
      name: "OFTCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFTCore>;
    deployContract(
      name: "ErrorsLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "PeripheralMigrationContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PeripheralMigrationContract>;
    deployContract(
      name: "PeripheralPRL",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PeripheralPRL>;
    deployContract(
      name: "LockBox",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LockBox>;
    deployContract(
      name: "PrincipalMigrationContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrincipalMigrationContract>;
    deployContract(
      name: "PRL",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PRL>;

    deployContract(
      name: "IOAppCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppCore>;
    deployContract(
      name: "IOAppMsgInspector",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppMsgInspector>;
    deployContract(
      name: "IOAppOptionsType3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppOptionsType3>;
    deployContract(
      name: "IOAppReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppReceiver>;
    deployContract(
      name: "OAppOptionsType3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppOptionsType3>;
    deployContract(
      name: "OApp",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OApp>;
    deployContract(
      name: "OAppCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppCore>;
    deployContract(
      name: "OAppReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppReceiver>;
    deployContract(
      name: "OAppSender",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppSender>;
    deployContract(
      name: "IOAppPreCrimeSimulator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOAppPreCrimeSimulator>;
    deployContract(
      name: "IPreCrime",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPreCrime>;
    deployContract(
      name: "OAppPreCrimeSimulator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OAppPreCrimeSimulator>;
    deployContract(
      name: "ILayerZeroEndpointV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroEndpointV2>;
    deployContract(
      name: "ILayerZeroReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILayerZeroReceiver>;
    deployContract(
      name: "IMessageLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessageLib>;
    deployContract(
      name: "IMessageLibManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessageLibManager>;
    deployContract(
      name: "IMessagingChannel",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingChannel>;
    deployContract(
      name: "IMessagingComposer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingComposer>;
    deployContract(
      name: "IMessagingContext",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMessagingContext>;
    deployContract(
      name: "ISendLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISendLib>;
    deployContract(
      name: "AddressCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressCast>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Nonces",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "IOFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOFT>;
    deployContract(
      name: "OFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFT>;
    deployContract(
      name: "OFTAdapter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFTAdapter>;
    deployContract(
      name: "OFTCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OFTCore>;
    deployContract(
      name: "ErrorsLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorsLib>;
    deployContract(
      name: "ERC20Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "PeripheralMigrationContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PeripheralMigrationContract>;
    deployContract(
      name: "PeripheralPRL",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PeripheralPRL>;
    deployContract(
      name: "LockBox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LockBox>;
    deployContract(
      name: "PrincipalMigrationContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PrincipalMigrationContract>;
    deployContract(
      name: "PRL",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PRL>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
